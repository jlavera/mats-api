#%RAML 0.8
title:     mats-api
version:   0.1
mediaType: application/json

/status:
  get:
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "status": "up"
              }

/auth:
  post:
    body:
      example: |
        {
          "code": 123123,
          "password": "pass"
        }
      schema: |
        {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
            "code": {
              "type": "integer"
            },
            "password": {
              "type": "string"
            }
          },
          "required": [
            "code",
            "password"
          ]
        }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "bearer": "123-123-123"
              }
      404:
        body:
          application/json:
            example: |
              {
                "name": "NotFoundError",
                "status": 404,
                "message": "User and password combination"
              }

# Información de sólo lectura con las configuraciones de las carreras
/careers:
  get:
    responses:
      200:
        body:
          application/json:
            description: Lista de carreras
            example: |
              [{
                "name": "Sistemas",
                "code": "K"
              }, {
                "name": "Química",
                "code": "Q"
              }]

  /{careerCode}:
    uriParameters:
      careerCode:
        type:        string
        required:    true
        description: Código de la carrera
        maxLength:   1

    get:
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "name": "Sistemas",
                  "code": "K"
                }

    /courses:
      get:
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "082021": {
                      "name": "Algoritmos",
                      "code": "082021",
                      "year": "1"
                    },
                    "082028": {
                      "name": "Diseño de sistemas",
                      "code": "082028",
                      "year": "3"
                    }
                  }

    /optionals:
      get:
        responses:
          200:
            body:
              application/json:
                example: |
                  [{
                    "year": "3",
                    "required": "2",
                    "courses": ["082021"]
                  }, {
                    "year": "4",
                    "required": "1",
                    "name": ["082028"]
                  }]

/users:
  get:
    responses:
      200:
        body:
          application/json:
            description: Lista de usuarios existentes
            example:     |
              [{
                "username": "user1"
              }, {
                "username": "user2"
              }]

  post:
    body:
      application/json:
        schema: |
          {
            "type":       "object",
            "$schema":    "http://json-schema.org/draft-03/schema",
            "id":         "http://jsonschema.net",
            "properties": {
              "code": {
                "type":     "integer"
              },
              "password":   {
                "type":     "string"
              }
            },
            "required": [
              "code",
              "password"
            ]
          }
    responses:
      200:
        description: En caso de actualización correcta
      201:
        description: En caso de creación correcta
      409:
        description: En caso de colisión de nombres de usuario

  /{username}:
    uriParameters:
      username:
        type:        integer
        required:    true
        description: Nombre de usuario

    get:
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "username": "user1"
                }

    delete:
      responses:
        200:
          description: En caso de eliminación correcta

    /signed:
      post:
        body:
          application/json:
            schema: |
              {
                "type": "array",
                "$schema": "http://json-schema.org/draft-03/schema",
                "items": {
                  "type": "string"
                }
              }

    /approved:
      post:
        body:
          application/json:
            schema: |
              {
                "type": "array",
                "$schema": "http://json-schema.org/draft-03/schema",
                "items": {
                  "type": "string"
                }
              }

    /pending:
      post:
        body:
          application/json:
            schema: |
              {
                "type": "array",
                "$schema": "http://json-schema.org/draft-03/schema",
                "items": {
                  "type": "string"
                }
              }
